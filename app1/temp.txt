# Create your views here.
'''
class ReviewEmailView(FormView):
    template_name= 'review.html'
    form_class = ReviewForm

    def form_valid(self, form):
        form.send_email()
        msg = 'Thanks for the review!'
        return HttpResponse(msg)

'''


#base.html
----------------------------------------------
<!doctype html>
<html lang="en">

<head>
  <!-- Required meta tags -->
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

  <!-- Bootstrap CSS -->
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
    integrity="sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z" crossorigin="anonymous">

  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>

  <title>{% block title %} Welcome to blog {% endblock %}</title>

  <style>
    .small {
      font-size: 0.875rem;
      color: #4b4b4b;
    }
  </style>

</head>

<body>

  {% block content %}
  {% endblock %}


  <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"
    integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous">
  </script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js"
    integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous">
  </script>
</body>

</html>


--------------------------------------------------
review.html
--------------------------------------------------
{% extends "base.html" %}
      {% block title %}Review{% endblock %}
      {% block content %}


      <style>
          .login,
          .image {
              min-height: 100vh;
          }

          .bg-image {
              background-image: url('https://picsum.photos/id/1079/1080');
              background-size: cover;
              background-position: center center;
          }

          .container-fluid {
              max-width: 100%;
          }

          .account-form input {
              border: 2px solid #ccc;
              height: calc(2em + .75rem + 2px);
          }

          .account-form input:focus {
              border-color: #1497ff;
              box-shadow: inset 0 0px 0px rgba(0, 0, 0, 0.075), 0 0 0px rgba(255, 0, 0, 0.6);
          }
      </style>


      <div class="container-fluid">
          <div class="row no-gutter">
              <div class="col-md-6 bg-light">
                  <div class="login d-flex align-items-center py-5">
                      <div class="container">
                          <div class="row">
                              <div class="col-8 col-md-8  mx-auto">
                                  <p class="h4 mb-4 font-weight-bold">Write a review</p>
                                  <form action="{% url 'reviews' %}" method="post">{% csrf_token %}
                                      {{ form.as_p }}
                                      <button class="btn btn-dark btn-block py-2 mb-4 mt-5 font-weight-bold"
                                          type="submit" value="Log-in">Submit</button>
                                  </form>
                              </div>
                          </div>
                      </div>
                  </div>
              </div>
              <div class="col-md-6 d-none d-md-flex bg-image"></div>
          </div>
      </div>
      {% endblock %}

-----------------------------------
email.py
-----------------------------------
from django.template import Context
from django.template.loader import render_to_string
from django.core.mail import EmailMessage
from django.conf import settings


def send_review_email(name,email,review):
    context={
        'name':name,
        'email':email,
        'review':review,
    }
    email_subject='Thank you for review'
    email_body = render_to_string('email_message.txt',context)

    email = EmailMessage(
        email_subject,email_body,
        settings.DEFUALT_FORM_EMAIL,[email,],
    )
    return email.send(fail_silently=False)
---------------------------
email_message.txt
-------------------------------
Hello {{name|safe}}
Here is a copy of your review:
{{review|safe}}


Thank You!

---------------------------
forms.py
----------------------------
from task2.tasks import send_review_email_task

class ReviewForm(forms.Form):
    name=forms.CharField(
        label='Firstname',min_length=4,max_length=50,widget=forms.TextInput(
            attrs={'class':'form-control mb-3','placeholder':'Firstname','id':'form-firstname'}))
    email=forms.EmailField(
        max_length=200,widget=forms.TextInput(
            attrs={'class':'form-control mb-3','placeholder':'E-mail','id':'form-email'}))
    review=forms.CharField(
        label='Review',min_length=4,max_length=50,widget=forms.Textarea(
            attrs={'class':'form-control','rows':'5'}))

    def send_email(self):
        send_review_email_task.delay(
        self.cleaned_data['name'],self.cleaned_data['email'],self.cleaned_data['review'])
----------------------------------
tasks.py
---------------------------------
#from celery.decorators import task
#from celery.utils.log import get_task_logger


#from .email import send_review_email

#logger=get_task_logger(__name__)

#@task(name='send_review_email_task')
#def send_review_email_task(name,email,review):
#    logger.info('sent_review_email')
#    return send_review_email(name,email,review)

